<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>朱笛</title>
  <subtitle>The nineth art learner</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-05T17:38:41.182Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>朱笛</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>传火者的日记&lt;一&gt;</title>
    <link href="http://yoursite.com/2016/04/06/%E4%BC%A0%E7%81%AB%E8%80%85%E7%9A%84%E6%97%A5%E8%AE%B0-%E4%B8%80/"/>
    <id>http://yoursite.com/2016/04/06/传火者的日记-一/</id>
    <published>2016-04-05T16:02:58.000Z</published>
    <updated>2016-04-05T17:38:41.182Z</updated>
    
    <content type="html">&lt;p&gt;我被诅咒了。&lt;br&gt;我不知道黑暗之环为什么会降临在我身上，我变成了一个不死人，从诅咒降临开始，我是谁，我叫什么名字，我有家庭么，这些全都被我遗忘了。&lt;br&gt;当我醒来的时候，那是一个阴暗潮湿的房间，忽然一束强光照在我身上，我睁开了眼，房顶有一个大洞，光就是从那里射进来的，一个身穿铠甲的男子蹲在那里，他看了我一眼，转身走开了。他是谁？我站起身来，发现自己被锁在一个狭小的房间里面，我旁边躺着一具尸体，腰间的钥匙在阳光下闪着白光，这是我的房间的钥匙么？我伸手想从他的腰间取下钥匙，忽然心中猛地一颤，我看到了我的手，那是一支干枯，粗糙，毫无生气的手，诅咒已经让我变成这样了么，那么我的存在还有什么意义啊，想到这里，我的头忽然痛起来，意识变得有些模糊了，我能找到办法解除诅咒么，这是我昏迷之前最后的想法。不知过去了过久，我醒了过来，阳光依旧灿烂，我应该没躺太久，眼前的尸体还在静静的躺着，他也是不死人，我看到了他身上的黑暗之环，可是他为什么会死呢？我从他身上取下钥匙的时候不解地想。&lt;br&gt;钥匙果然我的房间上的，我打开了门走了出去，这里看起来像是一座监狱，破败，阴暗，潮湿，我来到房间外，猛地看到走廊里有两个不死人，他们呆坐在地上，盯着前方，眼神涣散，我小心的从他们身边走过，他们丝毫没有察觉，看起来已经没有神智了，我也会变成这样么？&lt;br&gt;走廊拐角处地上有一把短剑，我捡了起来，略感心安。这时我看到地上刻着许多话，读完后我才知道，这里原来是北方修道院，诅咒像瘟疫一样爆发开来，很多跟我一样的人被抓了起来，关在了这里，直到世界的尽头。这应该是别的不死人刻下的，因为我还看到了很多谩骂与诅咒的话语。我很迷茫，我被抓起来多久了，为什么我的房间里会有钥匙，是刚才那个身穿铠甲的人给我的么？我继续往起走，又拐过一个弯，忽然听到身边旁边有动静，没等我回过头来，只觉得胸口一痛，一直剑从我的胸口划过，握剑的手跟我的一样干枯，我反应过来，挥着刚刚捡起的断剑向他刺去，但他他好像并没有多少意识，很快便被我砍死了，我看到他的身体消散了，而我可以感觉到我的灵魂好像变得更庞大了一些，我不知道为什么，但是这种感觉还真挺舒服的。我继续向前走，路上又砍死了好多不死人，每杀一个，便觉得灵魂壮大了一些，终于我看到了走廊的尽头，那里有一扇门，我快步走去，那里一定就是出口了，可这时，忽然听到左边有微弱的呻吟声传出，我向左望去，走廊的墙壁破了一个大洞，声音就是从这个房间发出来的。我从洞中钻了进去，看到了声音的来源，正式刚刚蹲在我房顶的那个穿铠甲的人，他看到了我，苦笑一声，“原来你还没丧失意识啊”，他对我说到，还没等我说话，他又接着说“我也是不死人，可我的伤太重了，待会儿可能就要死了，我的心也已经死了，你知道么，如果不死人丧失了希望，就会变成外面的那些东西，呵呵，我很快就是他们的一员了，在我的家乡，有这样一个传说，在众多的不死人中，有一些不死人是被选中的，他们要去往王者之地，这是不死人的使命，我马上就不行了，我有一个不死人的宝物，这是元素瓶，当你受伤的时侯，通过这个就可以恢复，送给你吧”，说着他递给我一个黄色的瓶子，我不知道要怎么回答他，这时他又对我说，“当你完成了使命，不死人的诅咒也就消失了”。“为什么要我去完成这个使命，我连自己是谁都不知道？”，“谁让我死前碰到你了呢，再说了，你办不到了还有别的不死人，总会有人完成的，你出去后外面有个大屁股的恶魔，是这里的看守者，把我的剑也拿去吧，干掉了他，你就可以离开这里了，去吧，让我死前再清静一会儿”。说完他闭上了眼睛，我的心情有些复杂，离开了房间来到了外面，我看到了那个恶魔，他比我还要丑陋，他也看到了我，向我冲了过了，接着的事情没什么好说的，我杀了他，来到了外面，那里有一个悬崖，我走了过去，忽然有一只大鸟飞了过来，抓起了我，在空中我俯瞰这个世界，如此明亮的世界，光从何处而来呢，我不禁想到。正思索着，大鸟开始下落，我看到前边好像有一座类似祭祀场的地方，这就是它想把我送到的地方么？果然，在祭祀场的正上方，它一松爪子，我落了下来，我喘了口气，环顾四周，看到不远处坐着一个人，我向他走去，他看到了我，离老远就说“又一个不死人，欢迎来到罗兰德大陆，在你之前又不知道多少跟你一样的人来过了，都为了那个什么所谓的使命，呵呵，诅咒还在，说明根本没人能够成功”，听了他的冷嘲热讽，我有些不快，他好像没看出来一样，接着说道“如果你真的想继续完成这个不可能使命，你就从这里——火之祭祀场出去，一直往山上爬，那里有一口钟，然后在一直往下走，你会来到病村，那里很好人，因为里面全都是病人，那里也有一个钟，把他们都敲响，然后，会发生什么谁也不知道，因为根本没人做到过，哈哈哈。对了，你在路上一定会得到一个叫人性的东西，这可是个好东西，得到它的最好途径，就是杀死别的人，你就能得到他的人性，你杀的人越多，人性就越充足，嘻嘻嘻，这可真是讽刺呢，好了我没什么想跟你说了，那里有个篝火，你可以在那里休息一下，别打扰我了，快点儿走吧。”他说完了话就不再理我，我只好来到篝火边坐下，回想今天发生的事情，我会变成那种没有意识的行尸走肉么，我不敢继续想下去，又想起刚才那人提到的人性，我应该不会做这种事吧，那样的话即便得到了人性，又能如何呢，就这样胡思乱想着，我便在篝火边睡着了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我被诅咒了。&lt;br&gt;我不知道黑暗之环为什么会降临在我身上，我变成了一个不死人，从诅咒降临开始，我是谁，我叫什么名字，我有家庭么，这些全都被我遗忘了。&lt;br&gt;当我醒来的时候，那是一个阴暗潮湿的房间，忽然一束强光照在我身上，我睁开了眼，房顶有一个大洞，光就是从那里射进来的，一个
    
    </summary>
    
      <category term="游戏" scheme="http://yoursite.com/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="黑暗之魂1" scheme="http://yoursite.com/tags/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%821/"/>
    
  </entry>
  
  <entry>
    <title>Unity中计时器/计时器管理类的实现</title>
    <link href="http://yoursite.com/2016/03/18/Unity%E4%B8%AD%E8%AE%A1%E6%97%B6%E5%99%A8-%E8%AE%A1%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86%E7%B1%BB%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2016/03/18/Unity中计时器-计时器管理类的实现/</id>
    <published>2016-03-17T16:15:10.000Z</published>
    <updated>2016-03-23T09:19:25.524Z</updated>
    
    <content type="html">&lt;p&gt;今天在做简单回合制游戏demo的过程中，需要用到计时器的功能，搜索了一下，发现可以用currentTime += Time.deltaTime来实现简单的计时功能，于是写了一个Timer和TimerManager类用来管理计时器。&lt;/p&gt;
&lt;h1 id=&quot;具体实现&quot;&gt;&lt;a href=&quot;#具体实现&quot; class=&quot;headerlink&quot; title=&quot;具体实现&quot;&gt;&lt;/a&gt;具体实现&lt;/h1&gt;&lt;p&gt;因为是自己写的，我的水平实在有限，对于很多东西包括类的设计，属性的封装之类处理的肯定不算好，所以代码质量就。。。不过回合制中的各种计时功能今天倒是都用这个实现了，所以还算能用，明天把回合制的demo写完了再看看别人的代码是怎么实现的计时器的管理的，进行下完善。&lt;/p&gt;
&lt;h2 id=&quot;Timer-Class&quot;&gt;&lt;a href=&quot;#Timer-Class&quot; class=&quot;headerlink&quot; title=&quot;Timer Class&quot;&gt;&lt;/a&gt;Timer Class&lt;/h2&gt;&lt;p&gt;计时器Timer类,属性包括isTimer，用来表示是计时器是否被启用，currentTimer用来记录计时器当前计时的时间，以及两个方法，StartTimer(), StopTimer()，用来设置isTimer的值来调整计时器的激活状态。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class Timer&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public float currentTimer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public bool isTimer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//public int id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public Timer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		currentTimer = 0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		isTimer = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void StartTimer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		isTimer = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void StopTimer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		isTimer = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;TimerManager-Class&quot;&gt;&lt;a href=&quot;#TimerManager-Class&quot; class=&quot;headerlink&quot; title=&quot;TimerManager Class&quot;&gt;&lt;/a&gt;TimerManager Class&lt;/h2&gt;&lt;p&gt;在计时器管理类里面，我定义了一个List用来存放Timer,定义了五个方法，AddTimer(),DeleteTimer()用来向List里面添加Timer，StartAllTimer(),StopAllTimer()两个方法用来激活或者暂停所有添加进List的Timer的状态，updateTiemr()用来在update方法中调用实现计时器功能。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class TimerManager &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private List&amp;lt;Timer&amp;gt; timerList; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public TimerManager()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		timerList = new List&amp;lt;Timer&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void AddTimer(Timer timer)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (timer == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Debug.LogError(&amp;quot;Add Timer ERROR: The timer can&amp;apos;t be null.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		foreach (Timer aTimer in timerList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(aTimer.Equals(timer))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Debug.LogError(&amp;quot;Add Timer ERROR: The timer have been added.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		timerList.Add (timer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void DeleteTimer(Timer timer)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (timer == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Debug.LogError(&amp;quot;Delete Tiemr ERROR: The timer you want to delete can&amp;apos;t be null.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		foreach (Timer aTimer in timerList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(aTimer.Equals(timer))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				timerList.Remove(timer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Debug.LogError (&amp;quot;Delete Timer ERROR: The timer you want to delete is not in the timerList&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void StartAllTimer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		foreach (Timer aTimer in timerList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			aTimer.isTimer = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void StopAllTimer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		foreach (Timer aTimer in timerList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			aTimer.isTimer = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void updateTimer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		foreach (Timer aTimer in timerList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(aTimer.isTimer)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				aTimer.currentTimer += Time.deltaTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天在做简单回合制游戏demo的过程中，需要用到计时器的功能，搜索了一下，发现可以用currentTime += Time.deltaTime来实现简单的计时功能，于是写了一个Timer和TimerManager类用来管理计时器。&lt;/p&gt;
&lt;h1 id=&quot;具体实现&quot;&gt;&lt;a 
    
    </summary>
    
      <category term="技术·游戏开发" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%C2%B7%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="Timer" scheme="http://yoursite.com/tags/Timer/"/>
    
  </entry>
  
  <entry>
    <title>Unity中鼠标点击识别物体的功能</title>
    <link href="http://yoursite.com/2016/03/15/Unity%E4%B8%AD%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E8%AF%86%E5%88%AB%E7%89%A9%E4%BD%93%E7%9A%84%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2016/03/15/Unity中鼠标点击识别物体的功能/</id>
    <published>2016-03-15T15:56:39.000Z</published>
    <updated>2016-03-16T08:45:07.154Z</updated>
    
    <content type="html">&lt;p&gt;今天在使用Unity开发小游戏做练习的过程中，需要获取到被鼠标点击到的物体，不知道应该如何实现，所以在网上搜索了一下，看到了下面这个方法，做了个小demo练习了一下，还挺好用的，所以记录一下：&lt;/p&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2016/03/16/56e91bde102b3.gif&quot; alt=&quot;mouseClick.gif&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void Update () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (Input.GetButtonDown (&amp;quot;Fire1&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		RaycastHit hitinfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if(Physics.Raycast(ray, out hitinfo))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			GameObject gameObj = hitinfo.transform.gameObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(gameObj.tag == &amp;quot;Cube&amp;quot;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				GameObject.Find(&amp;quot;Canvas/ClickMessage&amp;quot;).GetComponent&amp;lt;Text&amp;gt;().text = &amp;quot;你点击了立方体&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				//用于测试transform.Find方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				GameObject something = gameObj.transform.Find(&amp;quot;Thing&amp;quot;).gameObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				if(something != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					Debug.Log (&amp;quot;gameObj find his child gamobject &amp;quot; + something.tag);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(gameObj.tag == &amp;quot;Sphere&amp;quot;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				GameObject.Find(&amp;quot;Canvas/ClickMessage&amp;quot;).GetComponent&amp;lt;Text&amp;gt;().text = &amp;quot;你点击了球体&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(gameObj.tag == &amp;quot;Untagged&amp;quot;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				GameObject.Find(&amp;quot;Canvas/ClickMessage&amp;quot;).GetComponent&amp;lt;Text&amp;gt;().text = &amp;quot;你什么都没点到&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;这个方法原理其实也很简单，就是从主相机发出一条射线到鼠标点击的位置，并选中被射线击中的物体。&lt;br&gt;关于这个方法里的transform.gameObject，就是获得transform所在的物体，另外关于Physice.Raycast方法中的out，他表示这个被out标记的变量一定会在方法实现中被赋值。关于transform.Find（）在测试中发现，他返回的是一个Transform类型的值，并且只会在transform所在的变量的子物体中寻找。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天在使用Unity开发小游戏做练习的过程中，需要获取到被鼠标点击到的物体，不知道应该如何实现，所以在网上搜索了一下，看到了下面这个方法，做了个小demo练习了一下，还挺好用的，所以记录一下：&lt;/p&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;hea
    
    </summary>
    
      <category term="技术·游戏开发" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%C2%B7%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="tip" scheme="http://yoursite.com/tags/tip/"/>
    
  </entry>
  
  <entry>
    <title>Unity下有限状态机的学习</title>
    <link href="http://yoursite.com/2016/03/13/Unity%E4%B8%AD%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2016/03/13/Unity中有限状态机的学习/</id>
    <published>2016-03-13T04:41:05.000Z</published>
    <updated>2016-03-13T06:12:27.926Z</updated>
    
    <content type="html">&lt;p&gt;最近需要做一个回合制游戏的demo，开始的时候没什么思路，看了网上一些博客，很多提到需要用到有限状态机。这两天专门看了一下在Unity中有限状态机的写法，主要参考wiki上的FSM写法，附上&lt;a href=&quot;http://wiki.unity3d.com/index.php/Finite_State_Machine&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;。下面的记录为我自己的思考，作为初学者，难免会有理解的地方，欢迎大家指正。&lt;/p&gt;
&lt;h1 id=&quot;什么是FSM&quot;&gt;&lt;a href=&quot;#什么是FSM&quot; class=&quot;headerlink&quot; title=&quot;什么是FSM?&quot;&gt;&lt;/a&gt;什么是FSM?&lt;/h1&gt;&lt;p&gt;所谓FSM即为有限状态机（Finite State Machine）的缩写，在我看来它是一种实现AI的算法设计思想，用来存储系统中的状态，并根据条件实现状态之间的跳转。具体到到某个例子来说，比如在面向对象的思想中，我们建立了一个人的对象，人有喜怒哀惧，我们想要这个对象可以根据输入表现出不同的情绪，这时候就可以建立有限状态机，为它添加四种状态，喜怒哀惧，并为每个状态添加可能会遇到状态转换条件和与之相对应的状态，并不断检测，当出现满足转换条件的输入时，就转换到对应的状态，从而实现对象情绪的转变。&lt;/p&gt;
&lt;h1 id=&quot;为什么要使用FSM？&quot;&gt;&lt;a href=&quot;#为什么要使用FSM？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用FSM？&quot;&gt;&lt;/a&gt;为什么要使用FSM？&lt;/h1&gt;&lt;p&gt;由于本人目前刚刚开始学习Unity游戏开发，所以对于游戏开发的过程中使用有限状态机的优势并无十分深刻的理解。在我想来，如果游戏开发的过程中，一个对象的状态十分繁多，那么实现对象状态切换的逻辑代码将会变得十分复杂，而有限状态机这可以十分清晰的表现出这种逻辑关系，各个状态完全分离，由transition进行切换，方便我们的管理。&lt;/p&gt;
&lt;h1 id=&quot;FSM的写法&quot;&gt;&lt;a href=&quot;#FSM的写法&quot; class=&quot;headerlink&quot; title=&quot;FSM的写法&quot;&gt;&lt;/a&gt;FSM的写法&lt;/h1&gt;&lt;p&gt;根据有限状态机的用法，我们可以想象到，首先我们需要为每个状态定义一个类，这个类用来管理不同状态下的方法，如添加删除某个状态下的transition和对应的state(我们可以为每个状态定义一个stateID)的方法；通过transition返回对应stateID的方法；判断是否需要转换状态的方法；描述不同状态下对象行为的方法。这些方法每个状态都会需要，但是及具体实现又都不相同，所以我们可以抽象出来一个abstract类FSMState，让他派生出来各具体的状态类。有了各个状态的类，下面自然就需要一个类对状态进行管理，这便是FSMSystem类的作用，这个类需要包含一个state list,以及用来添加state的AddState方法，用来删除state的DeleteState方法，以及用来转换状态的PerformTransition方法。这两个类写好后，我们只需要在使用时在具体的对象的脚本中写出具体的状态类，就可以实现FSM。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近需要做一个回合制游戏的demo，开始的时候没什么思路，看了网上一些博客，很多提到需要用到有限状态机。这两天专门看了一下在Unity中有限状态机的写法，主要参考wiki上的FSM写法，附上&lt;a href=&quot;http://wiki.unity3d.com/index.php
    
    </summary>
    
      <category term="技术·游戏开发" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%C2%B7%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="有限状态机" scheme="http://yoursite.com/tags/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>终于用Hexo+Github搭建好了个人博客，记录一下</title>
    <link href="http://yoursite.com/2016/03/10/HEXO-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/03/10/HEXO-Github搭建个人博客/</id>
    <published>2016-03-10T14:12:28.000Z</published>
    <updated>2016-03-13T04:45:42.197Z</updated>
    
    <content type="html">&lt;p&gt;折腾了两天，终于算是吧这个博客建起来了，记录以下这次搭建的过程吧。&lt;/p&gt;
&lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;之所以会想要建设一个个人博客，是因为在最近的学习与生活中产生了许多感悟与体会，希望能找个简单清静的地方记录一下，一是总结与巩固，二是对自己起到一个督促的作用。但是现在网络上各家的博客，要么布满了广告，要么UI不合我胃口，思来想去，还是自己搭建一个blog最能满足我的需求，于是这就开始动手。我本来是想所有过程全部自己完成，但是到了实践的时候发现了许多问题。首先我的前端水平还处于初学者阶段，暂时无法做出令自己满意的页面，而写blog的事情我却不想再耽误下去；然后就是我在写的时候发现如果全部自己完成的话，意味着我每次需要发布文章的时候，就需要为文章单独写个界面，我觉得的即使是我可以写一个通用界面出来，但是每次发布仍然有许多代码要写，这意味着可能到我开始写博客的时候已经过了很长一段时间，这样一定会打击到我写blog的积极性，所以我开始寻求新的一种解决方案。很快我注意到了jekyll，但是尝试之后发现，天朝的程序员真是苦逼，jekyll即使在挂VPN的情况下仍然会安装失败，遂放弃。继续寻找，终于发现了这次的主角——&lt;strong&gt;Hexo&lt;/strong&gt;！下面就详细的记录一下搭建的过程。&lt;/p&gt;
&lt;h1 id=&quot;安装HEXO&quot;&gt;&lt;a href=&quot;#安装HEXO&quot; class=&quot;headerlink&quot; title=&quot;安装HEXO&quot;&gt;&lt;/a&gt;安装HEXO&lt;/h1&gt;&lt;p&gt;感觉安装HEXO比jekyll要方便很多，步骤如下：&lt;/p&gt;
&lt;h2 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;安装前提&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只有成功安装了这两兄弟，才能继续安装HEXO。&lt;/p&gt;
&lt;h2 id=&quot;使用npm安装HEXO&quot;&gt;&lt;a href=&quot;#使用npm安装HEXO&quot; class=&quot;headerlink&quot; title=&quot;使用npm安装HEXO&quot;&gt;&lt;/a&gt;使用npm安装HEXO&lt;/h2&gt;&lt;p&gt;之后只需执行下面这条指令即可完成HEXO的安装：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;建站&quot;&gt;&lt;a href=&quot;#建站&quot; class=&quot;headerlink&quot; title=&quot;建站&quot;&gt;&lt;/a&gt;建站&lt;/h1&gt;&lt;p&gt;完成Hexo的安装之后，首先使用cd指令来进入到想把网站文件建立在其中的文件夹内，然后执行下面的指令，Hexo会在指定的文件夹新建需要的文件：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建完成后，指定文件夹的目录结构如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── _config.yml
├── package.json
├── scaffolds
├── source
|   ├── _drafts
|   └── _posts
└── themes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里讲解以下各文件的作用：&lt;/p&gt;
&lt;h2 id=&quot;config-yml&quot;&gt;&lt;a href=&quot;#config-yml&quot; class=&quot;headerlink&quot; title=&quot;_config.yml&quot;&gt;&lt;/a&gt;_config.yml&lt;/h2&gt;&lt;p&gt;网站的配置信息，大多数的参数都在这里配置。&lt;/p&gt;
&lt;h2 id=&quot;package-json&quot;&gt;&lt;a href=&quot;#package-json&quot; class=&quot;headerlink&quot; title=&quot;package.json&quot;&gt;&lt;/a&gt;package.json&lt;/h2&gt;&lt;p&gt;可以查看与管理应用程序的信息。&lt;/p&gt;
&lt;h2 id=&quot;scaffolds&quot;&gt;&lt;a href=&quot;#scaffolds&quot; class=&quot;headerlink&quot; title=&quot;scaffolds&quot;&gt;&lt;/a&gt;scaffolds&lt;/h2&gt;&lt;p&gt;模板文件夹。&lt;/p&gt;
&lt;h2 id=&quot;source&quot;&gt;&lt;a href=&quot;#source&quot; class=&quot;headerlink&quot; title=&quot;source&quot;&gt;&lt;/a&gt;source&lt;/h2&gt;&lt;p&gt;资源文件夹是存放用户资源的地方。除 &lt;em&gt;posts 文件夹之外，开头命名为 &lt;/em&gt; (下划线)的文件/文件夹和隐藏的文件将会被忽略。Markdown和HTML文件会被解析并放到public 文件夹，而其他文件会被拷贝过去。&lt;/p&gt;
&lt;h2 id=&quot;themes&quot;&gt;&lt;a href=&quot;#themes&quot; class=&quot;headerlink&quot; title=&quot;themes&quot;&gt;&lt;/a&gt;themes&lt;/h2&gt;&lt;p&gt;Hexo会根据主题来生成静态网页，我们下载的主题就放在这个文件夹里面。&lt;/p&gt;
&lt;p&gt;在Hexo的&lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;可以查看HEXO的配置说明。&lt;/p&gt;
&lt;h2 id=&quot;安装自己喜欢的主题&quot;&gt;&lt;a href=&quot;#安装自己喜欢的主题&quot; class=&quot;headerlink&quot; title=&quot;安装自己喜欢的主题&quot;&gt;&lt;/a&gt;安装自己喜欢的主题&lt;/h2&gt;&lt;p&gt;我不喜欢hexo自带的主题，于是在Github上面搜索HEXO，就看到了现在正在用的NexT主题，安装这个主题只需要在命令行进入上面创建的Hexo文件夹里，然后输入下面这条命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/iissnan/hexo-theme-next themes/next
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后这个主题就成功的下载到了themes文件夹中，然后修改config文件中的theme字段，改为next，就启用了这一主题。接着&lt;a href=&quot;http://theme-next.iissnan.com/five-minutes-setup.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;是next主题的官方文档。&lt;/p&gt;
&lt;p&gt;至此，HEXO的安装及建站操作已经完成，可以输入下面这条指令进行本地测试：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着需要将它托管到github上面。&lt;/p&gt;
&lt;h1 id=&quot;配置Github&quot;&gt;&lt;a href=&quot;#配置Github&quot; class=&quot;headerlink&quot; title=&quot;配置Github&quot;&gt;&lt;/a&gt;配置Github&lt;/h1&gt;&lt;p&gt;这里其实是利用了gh-pages，要开启这个功能，首先需要新建一个Repository,命名的时候形式为username.github.io,然后打开hexo站点文件夹里的_congig.yml文件，在最下面，填入如下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deploy:
  type: git
  repo: git@github.com:username/username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此，hexo本地站点与github的gh-pages的连接完成。&lt;/p&gt;
&lt;h2 id=&quot;生成本地静态网页并部署到github&quot;&gt;&lt;a href=&quot;#生成本地静态网页并部署到github&quot; class=&quot;headerlink&quot; title=&quot;生成本地静态网页并部署到github&quot;&gt;&lt;/a&gt;生成本地静态网页并部署到github&lt;/h2&gt;&lt;p&gt;这一步骤只需要之后就执行下面的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$hexo g //生成
$hexo d //部署
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到这里，终于是大功告成，接着访问username.github.io即可登陆博客。&lt;/p&gt;
&lt;h1 id=&quot;发布文章&quot;&gt;&lt;a href=&quot;#发布文章&quot; class=&quot;headerlink&quot; title=&quot;发布文章&quot;&gt;&lt;/a&gt;发布文章&lt;/h1&gt;&lt;p&gt;hexo的文章是markdown即md格式的，所以这里是markdown的&lt;a href=&quot;http://www.appinn.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文官方文档&lt;/a&gt;，语法十分简单，稍微看下即可掌握。想要&lt;a href=&quot;https://hexo.io/zh-cn/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;发布文章&lt;/a&gt;，首先在git中进入本地hexo站点文件夹，之后执行下面的指令，会创建一个空白文档在_post文件夹下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo new [layout] &amp;lt;title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后打开这个文档即可开始写作，完成后重新将所有文件部署到github上面即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了两天，终于算是吧这个博客建起来了，记录以下这次搭建的过程吧。&lt;/p&gt;
&lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;之所以会想要建设一个个人博客，是因为在最近的学习与生活中产
    
    </summary>
    
      <category term="技术·前端" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%C2%B7%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/03/09/hello-world/"/>
    <id>http://yoursite.com/2016/03/09/hello-world/</id>
    <published>2016-03-09T13:40:43.241Z</published>
    <updated>2016-03-09T13:40:43.243Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
